[gd_scene load_steps=21 format=2]

[ext_resource path="res://Level2/EnvironmentObjects/Shadow.png" type="Texture" id=1]
[ext_resource path="res://Level2/Enemies/ForestGiant/Leg.png" type="Texture" id=2]
[ext_resource path="res://Level2/Enemies/ForestGiant/Torso.png" type="Texture" id=3]
[ext_resource path="res://Level2/Enemies/ForestGiant/Hump.png" type="Texture" id=4]
[ext_resource path="res://Level2/Enemies/ForestGiant/Skull.png" type="Texture" id=5]
[ext_resource path="res://Level2/Enemies/ForestGiant/Shoulder.png" type="Texture" id=6]
[ext_resource path="res://Level2/Enemies/ForestGiant/Arm.png" type="Texture" id=7]
[ext_resource path="res://Level2/Enemies/ForestGiant/Fur.png" type="Texture" id=8]
[ext_resource path="res://Level2/Enemies/ForestGiant/Bracelet.png" type="Texture" id=9]
[ext_resource path="res://Level2/Enemies/ForestGiant/Antlers.png" type="Texture" id=10]
[ext_resource path="res://Level1/Enemies/DeathParticles.tscn" type="PackedScene" id=11]
[ext_resource path="res://Level1/Enemies/DeathSoulParticles.tscn" type="PackedScene" id=12]

[sub_resource type="GDScript" id=1]

script/source = "extends Node2D

export var total_health = 10 # How many time must this enemy be hit before it dies.
export var fade_out_speed = 5.0 # How quickly to fade enemy out on death.
var middle_of_the_screen_y = 0.0 # To be fair and not start launching projectiles, when the player is at the top of the screen.
onready var projectile_launch_start_time = OS.get_ticks_msec() # To know when to launch each projectile.
onready var current_health = total_health # How much health does this enemy still have.
onready var damage_particles # For speed and convenience.
onready var death_soul_particles # For speed and convenience.
onready var death_timer # For speed and convenience.
onready var blood_splat_start_time = OS.get_ticks_msec() # To know, when to do the next blood splatter.
onready var sprite_body # For speed and convenience.
onready var	enemy_must_fade_out = false # To know, when to perform enemy fade out.
export (PackedScene) var projectile_template # For speed and convenience.
var disable_layer_id = 1024 # To avoid magic numbers.
onready var enemy_animator = $\"AnimationPlayer\" # For speed and convenience.
onready var enemy_animation_tree_player = $\"AnimationTreePlayer\"
export var attack_animation_speed = .25 # To avoid use of magic numbers.
export var idle_animation_speed = 1.0 # To avoid use of magic numbers.
export var animation_blend_speed = 1.0 # How quickly to blend between animations.
var animation_blend_value = 0.0 # What is the current blending between idle and attack.
export var projectile_type = \"ice_giant_projectile_offsets\" # To know, which array to use for the projectiles.
var current_projectile_offset_index = 0 # To change which offset is being used.
var animation_offset = .3 # Projectile must be launched at certain time compared to the animation.
export var enemy_launches_projectiles = false # To save resources.
export (Array) var archer_projectile_offsets = [] # Projectile offsets from the enemy. As Godot can't different array variables exposed in Inspector.
var original_damage_particle_alpha = 0.0 # To know, where to reset the alpha.
var original_death_soul_particle_alpha = 0.0 # To know, where to reset the alpha.
onready var enemy_collider = get_node(\"EnemyCollider\") # For speed and convenience.
var initialized = false # To know, when to run the body of _ready method.

func _ready():
	if !initialized:
		self.add_to_group(\"Enemies\")
		damage_particles = get_node(\"DeathParticles\")
		death_soul_particles = get_node(\"DeathSoulParticles\")
		death_timer = get_node(\"DeathTimer\")
		sprite_body = get_node(\"Body\")
		enemy_animation_tree_player.active = true
		damage_particles.restart()
		death_soul_particles.restart()
		original_damage_particle_alpha = damage_particles.modulate.a
		original_death_soul_particle_alpha = death_soul_particles.modulate.a
		damage_particles.modulate.a = 0.0
		death_soul_particles.modulate.a = 0.0

const blood_splat_start_coefficient = .8 # To avoid having magic numbers.

func receive_damage(damage_amount):
	if current_health >= 0:
		damage_particles.modulate.a = original_damage_particle_alpha
		damage_particles.emitting = true
		if OS.get_ticks_msec() - blood_splat_start_time > damage_particles.lifetime * Global.to_seconds_multiplier * blood_splat_start_coefficient:
			damage_particles.restart()
			blood_splat_start_time = OS.get_ticks_msec()
		current_health -= damage_amount
		if current_health < 0:
			death_timer.wait_time = death_soul_particles.lifetime
			death_soul_particles.modulate.a = original_death_soul_particle_alpha
			death_soul_particles.emitting = true
			death_soul_particles.restart()
			enemy_must_fade_out = true
			damage_particles.emitting = false
			damage_particles.modulate.a = 0.0
			enemy_collider.set_collision_layer(disable_layer_id)
			death_timer.start()

func _on_DeathTimer_timeout():
	#self.queue_free()
	# Don't free the object, to enable quicker level restart, this function and it's calling mechanism, can be removed.
	# It's here just temporarily.
	pass

func _process(delta):
	manage_projectile(delta)
	if enemy_must_fade_out:
		sprite_body.modulate.a -= fade_out_speed * delta

onready var projectile_launch_start_distance = OS.window_size.y + OS.window_size.y / 4.0 # To save resources.

func manage_projectile(delta):
	if Global.player.get_global_transform().origin.distance_to(self.get_global_transform().origin) < projectile_launch_start_distance:
		if abs(abs(enemy_animator.playback_speed) - abs(attack_animation_speed)) > Global.approximation_float:
			enemy_animator.playback_speed = attack_animation_speed
		animation_blend_value += animation_blend_speed * delta
		animation_blend_value = clamp(animation_blend_value, 0.0, 1.0)
		if animation_blend_value < 1.0 - Global.approximation_float:
			enemy_animation_tree_player.blend2_node_set_amount(\"blend2\", animation_blend_value)
		if enemy_launches_projectiles:
			var specific_animation_compensator = 1.0 / archer_projectile_offsets.size() # Each animation can have situation, where some events are be repeated multiple times during the animation.
			if !enemy_must_fade_out && OS.get_ticks_msec() - projectile_launch_start_time > animation_offset + enemy_animator.get_animation(\"Attack\").length * enemy_animator.playback_speed * Global.to_seconds_multiplier * specific_animation_compensator / attack_animation_speed:
				projectile_launch_start_time = OS.get_ticks_msec()
				if current_projectile_offset_index > 0 && projectile_template:
					var instanced_projectile = projectile_template.instance() # To manage the current projectile instance.
					instanced_projectile.constant_rotation_direction = -1.0 if current_projectile_offset_index % 2 == 0 else 1.0
					get_parent().add_child(instanced_projectile)
					instanced_projectile.parent_enemy = self
					if current_projectile_offset_index > archer_projectile_offsets.size() - 1: # Perhaps Sin function would be better here (have to investigate resource consumption).
						current_projectile_offset_index = 0
					instanced_projectile.position = get_parent().to_local(get_node(archer_projectile_offsets[current_projectile_offset_index]).get_global_transform().origin) # For speed and convenience.
					instanced_projectile.direction = (Global.player.get_global_transform().origin - self.get_global_transform().origin).normalized()
				current_projectile_offset_index += 1
	else:
		if abs(abs(enemy_animator.playback_speed) - abs(idle_animation_speed)) > Global.approximation_float:
			enemy_animator.playback_speed = idle_animation_speed
			current_projectile_offset_index = -1
		animation_blend_value -= animation_blend_speed * delta
		animation_blend_value = clamp(animation_blend_value, 0.0, 1.0)
		if animation_blend_value > Global.approximation_float:
			enemy_animation_tree_player.blend2_node_set_amount(\"blend2\", animation_blend_value)
"

[sub_resource type="StreamTexture" id=2]

flags = 4
load_path = "res://.import/Foot.png-3ebe175007cc44e401296e0377c52da2.stex"

[sub_resource type="StreamTexture" id=3]

flags = 4
load_path = "res://.import/Foot.png-3ebe175007cc44e401296e0377c52da2.stex"

[sub_resource type="StreamTexture" id=4]

flags = 4
load_path = "res://.import/Leg.png-6caabfa7f349ba8a50037f5526d39973.stex"

[sub_resource type="Animation" id=5]

resource_name = "Attack"
length = 10.0
loop = true
step = 0.1
tracks/0/type = "value"
tracks/0/path = NodePath("Body/Torso:position")
tracks/0/interp = 2
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Vector2( 0, 0 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("Body/Torso:rotation_degrees")
tracks/1/interp = 2
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 2.8, 3, 5, 7.8, 8 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1, 1 ),
"update": 0,
"values": [ 0.0, 83.154, -85.9476, 0.0, -83.2, 85.9 ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("Body/Torso/SkullRight:rotation_degrees")
tracks/2/interp = 2
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ 63.1259 ]
}
tracks/3/type = "value"
tracks/3/path = NodePath("Body/Torso/SkullRight/UpperArmRight/ArmRight:rotation_degrees")
tracks/3/interp = 2
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ 0.0 ]
}
tracks/4/type = "value"
tracks/4/path = NodePath("Body/Torso/SkullLeft:rotation_degrees")
tracks/4/interp = 2
tracks/4/loop_wrap = true
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ -67.021 ]
}
tracks/5/type = "value"
tracks/5/path = NodePath("Body/Torso/SkullLeft/UpperArmLeft/ArmLeft:rotation_degrees")
tracks/5/interp = 2
tracks/5/loop_wrap = true
tracks/5/imported = false
tracks/5/enabled = true
tracks/5/keys = {
"times": PoolRealArray( 0, 2.8, 4, 5, 5.7, 7.8, 8, 9 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1, 1, 1, 1 ),
"update": 0,
"values": [ 58.5958, 79.3696, 87.651, 72.1747, 0.0, -90.0, 66.3, -4.76374 ]
}
tracks/6/type = "value"
tracks/6/path = NodePath("Body/Torso/SkullRight/UpperArmRight:rotation_degrees")
tracks/6/interp = 2
tracks/6/loop_wrap = true
tracks/6/imported = false
tracks/6/enabled = true
tracks/6/keys = {
"times": PoolRealArray( 0, 2.8, 3, 4 ),
"transitions": PoolRealArray( 1, 1, 1, 1 ),
"update": 0,
"values": [ 88.7634, 230.922, 100.0, 96.7842 ]
}
tracks/7/type = "value"
tracks/7/path = NodePath("Body/Torso/SkullLeft/UpperArmLeft:rotation_degrees")
tracks/7/interp = 2
tracks/7/loop_wrap = true
tracks/7/imported = false
tracks/7/enabled = true
tracks/7/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ 36.0661 ]
}
tracks/8/type = "value"
tracks/8/path = NodePath("Body/Head:position")
tracks/8/interp = 2
tracks/8/loop_wrap = true
tracks/8/imported = false
tracks/8/enabled = true
tracks/8/keys = {
"times": PoolRealArray( 0, 2.8, 3, 5, 7.8, 8 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1, 1 ),
"update": 0,
"values": [ Vector2( -0.756592, -27.2206 ), Vector2( 8.24341, -36.2206 ), Vector2( 7.19906, -11.1762 ), Vector2( -3.06458, -25.9709 ), Vector2( -21.9853, -18.8998 ), Vector2( 6.89429, 16.779 ) ]
}
tracks/9/type = "value"
tracks/9/path = NodePath("Body/FootRight:position")
tracks/9/interp = 2
tracks/9/loop_wrap = true
tracks/9/imported = false
tracks/9/enabled = true
tracks/9/keys = {
"times": PoolRealArray( 0, 3 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Vector2( -52.8025, 114.079 ), Vector2( -52.8025, 114.079 ) ]
}
tracks/10/type = "value"
tracks/10/path = NodePath("Body/FootLeft:position")
tracks/10/interp = 2
tracks/10/loop_wrap = true
tracks/10/imported = false
tracks/10/enabled = true
tracks/10/keys = {
"times": PoolRealArray( 0, 2.8, 3, 7.8, 8 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1 ),
"update": 0,
"values": [ Vector2( 68.0255, 115.005 ), Vector2( 68.0255, 115.005 ), Vector2( 68.0255, 115.005 ), Vector2( 68.0255, 115.005 ), Vector2( 68.0255, 115.005 ) ]
}
tracks/11/type = "value"
tracks/11/path = NodePath("Body/Head/AntlerRight:rotation_degrees")
tracks/11/interp = 2
tracks/11/loop_wrap = true
tracks/11/imported = false
tracks/11/enabled = true
tracks/11/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ 0.0 ]
}
tracks/12/type = "value"
tracks/12/path = NodePath("Body/Head/AntlerLeft:rotation_degrees")
tracks/12/interp = 2
tracks/12/loop_wrap = true
tracks/12/imported = false
tracks/12/enabled = true
tracks/12/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ 0.0 ]
}
tracks/13/type = "value"
tracks/13/path = NodePath("Body/Head:rotation_degrees")
tracks/13/interp = 2
tracks/13/loop_wrap = true
tracks/13/imported = false
tracks/13/enabled = true
tracks/13/keys = {
"times": PoolRealArray( 0, 2.8, 3, 5, 7.8, 8 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1, 1 ),
"update": 0,
"values": [ 0.0, 10.3971, -9.23368, -0.203338, -17.4975, 17.885 ]
}
tracks/14/type = "value"
tracks/14/path = NodePath("Body/LegLeft:rotation_degrees")
tracks/14/interp = 2
tracks/14/loop_wrap = true
tracks/14/imported = false
tracks/14/enabled = true
tracks/14/keys = {
"times": PoolRealArray( 0, 2.8, 3, 5, 7.8, 8 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1, 1 ),
"update": 0,
"values": [ -9.0979, 30.997, -70.7324, -9.0979, -50.6554, 23.8599 ]
}
tracks/15/type = "value"
tracks/15/path = NodePath("Body/LegRight:rotation_degrees")
tracks/15/interp = 2
tracks/15/loop_wrap = true
tracks/15/imported = false
tracks/15/enabled = true
tracks/15/keys = {
"times": PoolRealArray( 0, 2.8, 3, 5, 7.8, 8 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1, 1 ),
"update": 0,
"values": [ 0.0, 54.6191, -34.7359, 0.0, -32.0159, 43.5201 ]
}
tracks/16/type = "value"
tracks/16/path = NodePath("Body/FootRight:rotation_degrees")
tracks/16/interp = 1
tracks/16/loop_wrap = true
tracks/16/imported = false
tracks/16/enabled = true
tracks/16/keys = {
"times": PoolRealArray( 0, 2.8, 3, 5 ),
"transitions": PoolRealArray( 1, 1, 1, 1 ),
"update": 0,
"values": [ -5.17782, -38.2064, 38.1754, 10.3793 ]
}
tracks/17/type = "value"
tracks/17/path = NodePath("Body/FootLeft:rotation_degrees")
tracks/17/interp = 1
tracks/17/loop_wrap = true
tracks/17/imported = false
tracks/17/enabled = true
tracks/17/keys = {
"times": PoolRealArray( 0, 2.8, 3, 5, 7.8, 8 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1, 1 ),
"update": 0,
"values": [ 0.0, -24.5353, 23.9059, 0.0, 27.6325, -23.2325 ]
}

[sub_resource type="Animation" id=6]

length = 1.2
loop = true
step = 0.1
tracks/0/type = "value"
tracks/0/path = NodePath("Body/Torso:position")
tracks/0/interp = 2
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Vector2( 0, 0 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("Body/Torso:rotation_degrees")
tracks/1/interp = 2
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ 0.0 ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("Body/Torso/SkullRight:rotation_degrees")
tracks/2/interp = 2
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ 63.1259 ]
}
tracks/3/type = "value"
tracks/3/path = NodePath("Body/Torso/SkullRight/UpperArmRight/ArmRight:rotation_degrees")
tracks/3/interp = 2
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ 0.0 ]
}
tracks/4/type = "value"
tracks/4/path = NodePath("Body/Torso/SkullLeft:rotation_degrees")
tracks/4/interp = 2
tracks/4/loop_wrap = true
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ -38.296 ]
}
tracks/5/type = "value"
tracks/5/path = NodePath("Body/Torso/SkullLeft/UpperArmLeft/ArmLeft:rotation_degrees")
tracks/5/interp = 2
tracks/5/loop_wrap = true
tracks/5/imported = false
tracks/5/enabled = true
tracks/5/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ -5.92921 ]
}
tracks/6/type = "value"
tracks/6/path = NodePath("Body/LegLeft:rotation_degrees")
tracks/6/interp = 2
tracks/6/loop_wrap = true
tracks/6/imported = false
tracks/6/enabled = true
tracks/6/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ 0.0 ]
}
tracks/7/type = "value"
tracks/7/path = NodePath("Body/LegRight:rotation_degrees")
tracks/7/interp = 2
tracks/7/loop_wrap = true
tracks/7/imported = false
tracks/7/enabled = true
tracks/7/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ 0.0 ]
}
tracks/8/type = "value"
tracks/8/path = NodePath("Body/Head:rotation_degrees")
tracks/8/interp = 2
tracks/8/loop_wrap = true
tracks/8/imported = false
tracks/8/enabled = true
tracks/8/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ 0.0 ]
}
tracks/9/type = "value"
tracks/9/path = NodePath("Body/Head:position")
tracks/9/interp = 2
tracks/9/loop_wrap = true
tracks/9/imported = false
tracks/9/enabled = true
tracks/9/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Vector2( -0.756592, -27.2206 ) ]
}
tracks/10/type = "value"
tracks/10/path = NodePath("Body/Head/AntlerLeft:rotation_degrees")
tracks/10/interp = 2
tracks/10/loop_wrap = true
tracks/10/imported = false
tracks/10/enabled = true
tracks/10/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ 0.0 ]
}
tracks/11/type = "value"
tracks/11/path = NodePath("Body/Head/AntlerRight:rotation_degrees")
tracks/11/interp = 2
tracks/11/loop_wrap = true
tracks/11/imported = false
tracks/11/enabled = true
tracks/11/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ 0.0 ]
}
tracks/12/type = "value"
tracks/12/path = NodePath("Body/FootLeft:position")
tracks/12/interp = 2
tracks/12/loop_wrap = true
tracks/12/imported = false
tracks/12/enabled = true
tracks/12/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Vector2( 66.8922, 81.2869 ) ]
}
tracks/13/type = "value"
tracks/13/path = NodePath("Body/FootRight:position")
tracks/13/interp = 2
tracks/13/loop_wrap = true
tracks/13/imported = false
tracks/13/enabled = true
tracks/13/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Vector2( -57.171, 83.1466 ) ]
}

[sub_resource type="Animation" id=7]

length = 6.0
loop = true
step = 0.1
tracks/0/type = "value"
tracks/0/path = NodePath("Body/Torso:position")
tracks/0/interp = 2
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Vector2( 0, 0 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("Body/Torso:rotation_degrees")
tracks/1/interp = 2
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 1.5, 3, 4.5 ),
"transitions": PoolRealArray( 1, 1, 1, 1 ),
"update": 0,
"values": [ 0.0, 34.6065, 0.0, -39.0476 ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("Body/Torso/SkullRight:rotation_degrees")
tracks/2/interp = 2
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ 63.1259 ]
}
tracks/3/type = "value"
tracks/3/path = NodePath("Body/Torso/SkullRight/UpperArmRight/ArmRight:rotation_degrees")
tracks/3/interp = 2
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ 0.0 ]
}
tracks/4/type = "value"
tracks/4/path = NodePath("Body/Torso/SkullLeft:rotation_degrees")
tracks/4/interp = 2
tracks/4/loop_wrap = true
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ -67.021 ]
}
tracks/5/type = "value"
tracks/5/path = NodePath("Body/Torso/SkullLeft/UpperArmLeft/ArmLeft:rotation_degrees")
tracks/5/interp = 2
tracks/5/loop_wrap = true
tracks/5/imported = false
tracks/5/enabled = true
tracks/5/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ 0.0 ]
}
tracks/6/type = "value"
tracks/6/path = NodePath("Body/Torso/SkullRight/UpperArmRight:rotation_degrees")
tracks/6/interp = 2
tracks/6/loop_wrap = true
tracks/6/imported = false
tracks/6/enabled = true
tracks/6/keys = {
"times": PoolRealArray( 0, 1.5, 3, 4.5 ),
"transitions": PoolRealArray( 1, 1, 1, 1 ),
"update": 0,
"values": [ 77.8965, 81.9881, 77.8965, 126.183 ]
}
tracks/7/type = "value"
tracks/7/path = NodePath("Body/Torso/SkullLeft/UpperArmLeft:rotation_degrees")
tracks/7/interp = 2
tracks/7/loop_wrap = true
tracks/7/imported = false
tracks/7/enabled = true
tracks/7/keys = {
"times": PoolRealArray( 0, 1.5, 3, 4.5 ),
"transitions": PoolRealArray( 1, 1, 1, 1 ),
"update": 0,
"values": [ 81.7276, 35.4786, 81.7276, 95.0969 ]
}
tracks/8/type = "value"
tracks/8/path = NodePath("Body/Head:position")
tracks/8/interp = 2
tracks/8/loop_wrap = true
tracks/8/imported = false
tracks/8/enabled = true
tracks/8/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Vector2( -0.756592, -27.2206 ) ]
}
tracks/9/type = "value"
tracks/9/path = NodePath("Body/FootRight:position")
tracks/9/interp = 2
tracks/9/loop_wrap = true
tracks/9/imported = false
tracks/9/enabled = true
tracks/9/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Vector2( -57.7153, 114.626 ) ]
}
tracks/10/type = "value"
tracks/10/path = NodePath("Body/FootLeft:position")
tracks/10/interp = 2
tracks/10/loop_wrap = true
tracks/10/imported = false
tracks/10/enabled = true
tracks/10/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Vector2( 93.2855, 115.134 ) ]
}
tracks/11/type = "value"
tracks/11/path = NodePath("Body/Head/AntlerRight:rotation_degrees")
tracks/11/interp = 2
tracks/11/loop_wrap = true
tracks/11/imported = false
tracks/11/enabled = true
tracks/11/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ 0.0 ]
}
tracks/12/type = "value"
tracks/12/path = NodePath("Body/Head/AntlerLeft:rotation_degrees")
tracks/12/interp = 2
tracks/12/loop_wrap = true
tracks/12/imported = false
tracks/12/enabled = true
tracks/12/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ 0.0 ]
}
tracks/13/type = "value"
tracks/13/path = NodePath("Body/Head:rotation_degrees")
tracks/13/interp = 2
tracks/13/loop_wrap = true
tracks/13/imported = false
tracks/13/enabled = true
tracks/13/keys = {
"times": PoolRealArray( 0, 1, 2.2, 3, 3.8, 5.5 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1, 1 ),
"update": 0,
"values": [ 0.0, 94.8526, 94.8526, 0.0, -109.741, -109.741 ]
}
tracks/14/type = "value"
tracks/14/path = NodePath("Body/LegLeft:rotation_degrees")
tracks/14/interp = 2
tracks/14/loop_wrap = true
tracks/14/imported = false
tracks/14/enabled = true
tracks/14/keys = {
"times": PoolRealArray( 0, 1.5, 3 ),
"transitions": PoolRealArray( 1, 1, 1 ),
"update": 0,
"values": [ -9.0979, 15.9484, -9.0979 ]
}
tracks/15/type = "value"
tracks/15/path = NodePath("Body/LegRight:rotation_degrees")
tracks/15/interp = 2
tracks/15/loop_wrap = true
tracks/15/imported = false
tracks/15/enabled = true
tracks/15/keys = {
"times": PoolRealArray( 0, 3, 4.5 ),
"transitions": PoolRealArray( 1, 1, 1 ),
"update": 0,
"values": [ 0.0, 0.0, -26.9239 ]
}
tracks/16/type = "value"
tracks/16/path = NodePath("Body/FootRight:rotation_degrees")
tracks/16/interp = 2
tracks/16/loop_wrap = true
tracks/16/imported = false
tracks/16/enabled = true
tracks/16/keys = {
"times": PoolRealArray( 0, 1.5 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ 0.0, -23.3618 ]
}
tracks/17/type = "value"
tracks/17/path = NodePath("Body/FootLeft:rotation_degrees")
tracks/17/interp = 2
tracks/17/loop_wrap = true
tracks/17/imported = false
tracks/17/enabled = true
tracks/17/keys = {
"times": PoolRealArray( 0, 3, 4.5 ),
"transitions": PoolRealArray( 1, 1, 1 ),
"update": 0,
"values": [ -1.48024, -1.48024, 16.6144 ]
}

[sub_resource type="CapsuleShape2D" id=8]

custom_solver_bias = 0.0
radius = 126.562
height = 20.0

[node name="ForestGiant" type="Node2D"]

script = SubResource( 1 )
_sections_unfolded = [ "Transform", "Visibility" ]
total_health = 10
fade_out_speed = 5.0
projectile_template = null
attack_animation_speed = 0.25
idle_animation_speed = 1.0
animation_blend_speed = 1.0
projectile_type = "ice_giant_projectile_offsets"
enemy_launches_projectiles = false
archer_projectile_offsets = null

[node name="Body" type="Node2D" parent="." index="0"]

[node name="Shadow" type="Sprite" parent="Body" index="0"]

self_modulate = Color( 1, 1, 1, 0.509804 )
scale = Vector2( 4, 4 )
texture = ExtResource( 1 )
_sections_unfolded = [ "Animation", "Offset", "Transform", "Visibility" ]

[node name="FootLeft" type="Sprite" parent="Body" index="1"]

position = Vector2( 93.2855, 115.134 )
rotation = -0.0258351
texture = SubResource( 2 )
offset = Vector2( -2.4752, -24.1792 )
_sections_unfolded = [ "Transform" ]

[node name="FootRight" type="Sprite" parent="Body" index="2"]

position = Vector2( -57.7153, 114.626 )
texture = SubResource( 3 )
offset = Vector2( 0.950706, -19.0788 )
flip_h = true
_sections_unfolded = [ "Offset", "Transform" ]

[node name="LegRight" type="Sprite" parent="Body" index="3"]

position = Vector2( 36.8743, 31.8654 )
texture = SubResource( 4 )
offset = Vector2( 24.9171, 22.833 )
_sections_unfolded = [ "Transform" ]

[node name="LegLeft" type="Sprite" parent="Body" index="4"]

position = Vector2( -27.9687, 37.8093 )
rotation = -0.158788
texture = ExtResource( 2 )
offset = Vector2( -24.9864, 21.6301 )
flip_h = true
_sections_unfolded = [ "Offset" ]

[node name="Torso" type="Sprite" parent="Body" index="5"]

editor/display_folded = true
texture = ExtResource( 3 )
_sections_unfolded = [ "Transform" ]

[node name="Hump" type="Sprite" parent="Body/Torso" index="0"]

position = Vector2( -1.77524, -85.3292 )
texture = ExtResource( 4 )

[node name="SkullRight" type="Sprite" parent="Body/Torso" index="1"]

position = Vector2( -64.4032, -7.90624 )
rotation = 1.10175
texture = ExtResource( 5 )
offset = Vector2( 3.35574, 25.2133 )
_sections_unfolded = [ "Offset", "Visibility" ]

[node name="UpperArmRight" type="Sprite" parent="Body/Torso/SkullRight" index="0"]

show_behind_parent = true
position = Vector2( 7.09242, 39.0969 )
rotation = 1.35955
texture = ExtResource( 6 )
flip_v = true
_sections_unfolded = [ "Material", "Offset", "Transform", "Visibility" ]

[node name="ArmRight" type="Sprite" parent="Body/Torso/SkullRight/UpperArmRight" index="0"]

show_behind_parent = true
position = Vector2( 21.5778, -9.09518 )
texture = ExtResource( 7 )
offset = Vector2( 52.5035, -61.0527 )
flip_v = true
_sections_unfolded = [ "Material", "Offset", "Visibility" ]

[node name="Node2D" type="Node2D" parent="Body/Torso/SkullRight/UpperArmRight/ArmRight" index="0"]

position = Vector2( 52.5035, -61.0527 )

[node name="SkullLeft" type="Sprite" parent="Body/Torso" index="2"]

position = Vector2( 54.3487, -4.58915 )
rotation = -1.16974
texture = ExtResource( 5 )
offset = Vector2( -1.06217, 22.8451 )
_sections_unfolded = [ "Visibility" ]

[node name="UpperArmLeft" type="Sprite" parent="Body/Torso/SkullLeft" index="0"]

show_behind_parent = true
position = Vector2( -6.27621, 20.8635 )
rotation = 1.42642
texture = ExtResource( 6 )
offset = Vector2( 22.0697, 7.15296 )
_sections_unfolded = [ "Transform", "Visibility", "Z Index" ]

[node name="ArmLeft" type="Sprite" parent="Body/Torso/SkullLeft/UpperArmLeft" index="0"]

show_behind_parent = true
position = Vector2( 35.5641, 23.4488 )
texture = ExtResource( 7 )
offset = Vector2( 46.739, 57.1323 )
_sections_unfolded = [ "Material", "Transform", "Visibility" ]

[node name="Node2D" type="Node2D" parent="Body/Torso/SkullLeft/UpperArmLeft/ArmLeft" index="0"]

position = Vector2( 46.739, 57.1323 )

[node name="Fur" type="Sprite" parent="Body/Torso" index="3"]

editor/display_folded = true
texture = ExtResource( 8 )

[node name="Bracelet" type="Sprite" parent="Body/Torso/Fur" index="0"]

position = Vector2( -0.735046, 51.4563 )
texture = ExtResource( 9 )

[node name="Head" type="Sprite" parent="Body" index="6"]

editor/display_folded = true
position = Vector2( -0.756592, -27.2206 )
texture = ExtResource( 5 )
offset = Vector2( 1.4917, 17.6645 )

[node name="AntlerLeft" type="Sprite" parent="Body/Head" index="0"]

position = Vector2( 28.6533, -2.28044 )
texture = ExtResource( 10 )
offset = Vector2( 74.6514, -32.9978 )

[node name="AntlerRight" type="Sprite" parent="Body/Head" index="1"]

position = Vector2( -24.0354, -4.67537 )
texture = ExtResource( 10 )
offset = Vector2( -74.6569, -32.2319 )
flip_h = true
_sections_unfolded = [ "Offset" ]

[node name="AnimationPlayer" type="AnimationPlayer" parent="." index="1"]

root_node = NodePath("..")
autoplay = "Attack"
playback_process_mode = 1
playback_default_blend_time = 0.0
playback_speed = 1.0
anims/Attack = SubResource( 5 )
anims/Default = SubResource( 6 )
anims/Idle = SubResource( 7 )
blend_times = [  ]

[node name="AnimationTreePlayer" type="AnimationTreePlayer" parent="." index="2"]

playback_process_mode = 1
master_player = NodePath("../AnimationPlayer")
base_path = NodePath("..")
active = false
data = {
"active": false,
"connections": [ "blend2", "out", 0, "anim", "blend2", 0, "anim 2", "blend2", 1 ],
"master": NodePath("../AnimationPlayer"),
"nodes": [ {
"filter": [  ],
"from": "Idle",
"id": "anim",
"position": Vector2( 73, 54 ),
"type": "animation"
}, {
"id": "out",
"position": Vector2( 308, 92 ),
"type": "output"
}, {
"filter": [  ],
"from": "Attack",
"id": "anim 2",
"position": Vector2( 60, 172 ),
"type": "animation"
}, {
"blend": 0.0,
"filter": [  ],
"id": "blend2",
"position": Vector2( 197, 81 ),
"type": "blend2"
} ]
}

[node name="EnemyCollider" type="StaticBody2D" parent="." index="3"]

editor/display_folded = true
light_mask = 0
position = Vector2( -4.51251, 42.4176 )
input_pickable = false
collision_layer = 32
collision_mask = 0
constant_linear_velocity = Vector2( 0, 0 )
constant_angular_velocity = 0.0
friction = 1.0
bounce = 0.0
_sections_unfolded = [ "Collision", "Material" ]

[node name="CollisionShape2D" type="CollisionShape2D" parent="EnemyCollider" index="0"]

shape = SubResource( 8 )

[node name="DeathParticles" parent="." index="4" instance=ExtResource( 11 )]

scale = Vector2( 15, 7.5 )

[node name="DeathSoulParticles" parent="." index="5" instance=ExtResource( 12 )]

[node name="DeathTimer" type="Timer" parent="." index="6"]

process_mode = 1
wait_time = 1.0
one_shot = false
autostart = false

[connection signal="timeout" from="DeathTimer" to="." method="_on_DeathTimer_timeout"]


